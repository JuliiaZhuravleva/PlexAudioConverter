#!/usr/bin/env python3
"""
Config Update Test Tool

–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö —Å–µ–∫—Ü–∏–π –∏ –æ–ø—Ü–∏–π.
"""

import os
import sys
import shutil
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from core.config_manager import ConfigManager
from core.logger import logger


def test_config_auto_update():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    test_dir = Path("/temp/config_test")
    test_dir.mkdir(parents=True, exist_ok=True)
    
    # –ü—É—Ç—å –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –∫–æ–Ω—Ñ–∏–≥—É
    test_config_path = test_dir / "test_config.ini"
    
    try:
        # –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥ –±–µ–∑ —Å–µ–∫—Ü–∏–∏ [Download]
        old_config_content = """[General]
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
watch_directory = E:\\Download\\Movie
# –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (300 = 5 –º–∏–Ω—É—Ç)
check_interval = 300
# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
max_depth = 2
# –£–¥–∞–ª—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—ã –ø–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
delete_original = false
# –ü—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–∫—Ä–∏–ø—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
converter_script = audio_converter.py

[FFmpeg]
# –ü—É—Ç—å –∫ ffmpeg –∏ ffprobe
ffmpeg_path = ffmpeg
ffprobe_path = ffprobe
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
audio_codec = aac
audio_bitrate = 192k
audio_sample_rate = 48000

[Telegram]
# –í–∫–ª—é—á–∏—Ç—å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
enabled = false
# Bot Token (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)
bot_token = YOUR_BOT_TOKEN_HERE
# Chat ID (–ø–æ–ª—É—á–∏—Ç–µ —É @userinfobot)
chat_id = YOUR_CHAT_ID_HERE
# –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
notify_on_start = true
notify_on_conversion = true
notify_on_no_english = true
notify_on_error = true
notify_summary = true

[FileTypes]
# –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
extensions = .mp4,.mkv,.avi,.mov,.m4v,.wmv,.flv,.webm

[Advanced]
# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –ú–ë –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
min_file_size_mb = 100
# –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ N –¥–Ω–µ–π (0 = –Ω–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å)
ignore_older_than_days = 0
# –°–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
create_backup = true
"""
        
        print("üìù –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ñ–∏–≥ –±–µ–∑ —Å–µ–∫—Ü–∏–∏ [Download]...")
        with open(test_config_path, 'w', encoding='utf-8') as f:
            f.write(old_config_content.strip())
        
        # –®–∞–≥ 2: –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —á–µ—Ä–µ–∑ ConfigManager
        print("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —á–µ—Ä–µ–∑ ConfigManager...")
        config_manager = ConfigManager(str(test_config_path))
        
        # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–µ –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–æ–≤—ã—Ö –æ–ø—Ü–∏–π...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏—é Download
        download_enabled = config_manager.getboolean('Download', 'enabled', False)
        check_interval = config_manager.getfloat('Download', 'check_interval', 0.0)
        stability_threshold = config_manager.getfloat('Download', 'stability_threshold', 0.0)
        notify_on_complete = config_manager.getboolean('Download', 'notify_on_complete', False)
        cleanup_hours = config_manager.getint('Download', 'cleanup_completed_hours', 0)
        
        print(f"   Download.enabled: {download_enabled}")
        print(f"   Download.check_interval: {check_interval}")
        print(f"   Download.stability_threshold: {stability_threshold}")
        print(f"   Download.notify_on_complete: {notify_on_complete}")
        print(f"   Download.cleanup_completed_hours: {cleanup_hours}")
        
        # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        print("\nüìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
        with open(test_config_path, 'r', encoding='utf-8') as f:
            updated_content = f.read()
        
        if '[Download]' in updated_content:
            print("‚úÖ –°–µ–∫—Ü–∏—è [Download] —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        else:
            print("‚ùå –°–µ–∫—Ü–∏—è [Download] –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
            return False
            
        if 'stability_threshold' in updated_content:
            print("‚úÖ –û–ø—Ü–∏—è stability_threshold –Ω–∞–π–¥–µ–Ω–∞!")
        else:
            print("‚ùå –û–ø—Ü–∏—è stability_threshold –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
            return False
        
        # –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–ø—Ü–∏–∏
        print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–ø—Ü–∏–∏...")
        
        # –£–¥–∞–ª—è–µ–º –æ–¥–Ω—É –æ–ø—Ü–∏—é –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ–∫—Ü–∏–∏
        modified_content = updated_content.replace('notify_on_complete = true', '')
        with open(test_config_path, 'w', encoding='utf-8') as f:
            f.write(modified_content)
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
        config_manager2 = ConfigManager(str(test_config_path))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        notify_restored = config_manager2.getboolean('Download', 'notify_on_complete', False)
        print(f"   –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –æ–ø—Ü–∏—è notify_on_complete: {notify_restored}")
        
        if notify_restored:
            print("‚úÖ –û—Ç–¥–µ–ª—å–Ω–∞—è –æ–ø—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        else:
            print("‚ùå –û—Ç–¥–µ–ª—å–Ω–∞—è –æ–ø—Ü–∏—è –ù–ï –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
            return False
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
        
    finally:
        # –û—á–∏—Å—Ç–∫–∞
        try:
            if test_dir.exists():
                shutil.rmtree(test_dir)
                print(f"\nüßπ –û—á–∏—â–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {test_dir}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")


if __name__ == '__main__':
    success = test_config_auto_update()
    if success:
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)
