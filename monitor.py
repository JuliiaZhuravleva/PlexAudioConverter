#!/usr/bin/env python3
"""
Plex Audio Monitor - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ —Å–ª—É–∂–±–∞ Windows –∏–ª–∏ –≤ —Ñ–æ–Ω–µ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤

–ê–≤—Ç–æ—Ä: Assistant
–í–µ—Ä—Å–∏—è: 1.0
"""

import os
import sys
import json
import time
import logging
import asyncio
from pathlib import Path
from typing import Dict, List, Optional
import signal
from core.config_manager import ConfigManager
from core.audio_monitor import AudioMonitor
from core.logger import logger

# –î–ª—è Windows —Å–ª—É–∂–±—ã
try:
    import win32serviceutil
    import win32service
    import win32event
    import servicemanager
    WINDOWS_SERVICE = True
except ImportError:
    WINDOWS_SERVICE = False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"""
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = ConfigManager()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if config.get('General', 'watch_directory') == 'C:\\Download':
        logger.warning("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ monitor_config.ini!")

    # –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    monitor = AudioMonitor(config)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    def signal_handler(sig, frame):
        logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {sig}")
        monitor.stop()

    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    try:
        await monitor.monitor_loop()
    except KeyboardInterrupt:
        logger.info("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C)")
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
        monitor.stop()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        if monitor.notifier and monitor.config.getboolean('Telegram', 'notify_on_start'):
            try:
                message = "üõë <b>–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</b>"
                await monitor.notifier.send_message(message)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏: {e}")


if __name__ == '__main__':
    if len(sys.argv) > 1:
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Windows —Å–ª—É–∂–±–æ–π
        if WINDOWS_SERVICE:
            if sys.argv[1] == 'install':
                win32serviceutil.InstallService(
                    AudioMonitorService,
                    AudioMonitorService._svc_name_,
                    AudioMonitorService._svc_display_name_
                )
                print(f"–°–ª—É–∂–±–∞ {AudioMonitorService._svc_display_name_} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            elif sys.argv[1] == 'remove':
                win32serviceutil.RemoveService(AudioMonitorService._svc_name_)
                print(f"–°–ª—É–∂–±–∞ {AudioMonitorService._svc_display_name_} —É–¥–∞–ª–µ–Ω–∞")
            elif sys.argv[1] == 'start':
                win32serviceutil.StartService(AudioMonitorService._svc_name_)
                print(f"–°–ª—É–∂–±–∞ {AudioMonitorService._svc_display_name_} –∑–∞–ø—É—â–µ–Ω–∞")
            elif sys.argv[1] == 'stop':
                win32serviceutil.StopService(AudioMonitorService._svc_name_)
                print(f"–°–ª—É–∂–±–∞ {AudioMonitorService._svc_display_name_} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            else:
                print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: monitor.py [install|remove|start|stop]")
        else:
            print("Windows —Å–ª—É–∂–±—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pywin32)")
    else:
        # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫
        asyncio.run(main())
